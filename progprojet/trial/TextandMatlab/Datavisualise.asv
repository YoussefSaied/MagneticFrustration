%%Text format%%
set(groot, 'defaultAxesTickLabelInterpreter','latex');
set(groot, 'defaultLegendInterpreter','latex');
set(groot, 'defaultTextInterpreter', 'latex');
set(groot, 'defaultAxesFontSize', 18);

%%Analysis%%

%%Unpack Data%%
nsimul = 250;
%variable glossary:
%E = energy
%C = correlation
%A = total angle
%T = type
  %m_T = magnet type = ff,fw,ww
  %v_T = magnet types on a vertex (x3)
  %d_T = magnet types on a double vertex (x5)
  %f_T = magnet types on a face (x5)
%O = face orientation = 5,4,3,2


%% system
load('data/evolve/angles'); %nx(T,E,C,ax30)
s = angles;
s_a = s(:,4:33);
for i = 1:nsimul
    for j = 1:30
        
    end
end


s_Aabs = sum(abs(s_a),2);
s_A = sum(s_a,2);
s_E = s(:,2);
s_C = s(:,3); %maybe need a couple of different correlations


figure %histograms of energy, correlation & angle
subplot(1,3,1)
histogram(s_E,10);
grid on
xlabel('energy');
title('E');
subplot(1,3,2)
histogram(s_C,10);
grid on
xlabel('correlation');
title('cor');
subplot(1,3,3)
grid on
xlabel('angle')
histogram(s_Aabs,20)

figure
hold on
scatter(s_C,s_E);
R = corrcoef(s_C,s_E);
grid on
xlabel('cor');
ylabel('E');

%% magnets
load('data/evolve/magnets'); %nx30x(a,T)
m = reshape(magnets,[250,30,2]);
m_A = m(:,:,1);
m_T = m(:,:,2);

m_ff_A = zeros(250*30,2); %11411, 12411, 12421, (angle,type)
m_fw_A = zeros(250*30,2);
m_ww_A = zeros(250*30,2);
m_fff_A = zeros(size(m_A));

for i = 1:nsimul
  for j = 1:30
      q = m_T(i,j);
      m1 = int32(q/10000);
      m2 = int32(mod(q,10000)/1000);
      m3 = int32(mod(q,1000)/100);
      m4 = int32(mod(q,100)/10);
      m5 = int32(mod(q,10));
      ms = [m1,m2,m3,m4,m5]; 

    if m3 == 4 %strong
      n3 = nnz(ms==3);
      n2 = nnz(ms==2);
      n1 = nnz(ms==1);
      m_ff_A(i*j,1) = m_A(i,j);

      if n2 == 3
          m_ff_A(i*j,2) = 22421;
      elseif n1 == 3
          m_ff_A(i*j,2) = 11412;
      elseif n1 == 2 && n2 == 2
          if m1 == m2
              m_ff_A(i*j,2) = 11422;
          else
              m_ff_A(i*j,2) = 12412;
          end
      else
          m_ff_A(i*j,2) = q;
      end
   
    elseif m3 == 3 %strong-weak
     m_fw_A(i*j,1) = m_A(i,j);
     m_fw_A(i*j,2) = q;
    elseif m3 == 2 %strong-weak
     m_fw_A(i*j,1) = m_A(i,j);
     m_fw_A(i*j,2) = q;
    elseif m3 == 1 %weak
      ms(ms==3)=2;
      q = 10000*ms(1)+ 1000*ms(2)+100*ms(3)+10*ms(4)+ms(5);
      m_ww_A(i*j,1) = m_A(i,j);
      n2 = nnz(ms==2);
      n1 = nnz(ms==1);
      n4 = nnz(ms==4);
      if n2 == 3
        if n1 == 2
          m_ww_A(i*j,2) = 22121;
        elseif n1 == 1
          m_ww_A(i*j,2) = 22124;
        end
      elseif n1 == 3
          if n4 == 0
              m_ww_A(i*j,2) = 12121;
          elseif n4 ==1
              m_ww_A(i*j,2) = 14121;
          else
              m_ww_A(i*j,2) = 14141;
          end
      elseif m(1)==2 && m(2)==2
           m_ww_A(i*j,2) = 22141;
      elseif m(4)==2 && m(5)==2
           m_ww_A(i*j,2) = 22141;      
      elseif n4 == 2
           m_ww_A(i*j,2) = 41124;
      elseif n1==n2
           m_ww_A(i*j,2) = 12124;


      else  
        m_ww_A(i*j,2) = q;
     end
    end
  end
end

x = m_ff_A;

for i = 1:length(x)
    if x(i,1) == 0
        x(i,:) = 0;
    end
    x(i,1) = mod(x(i,1),pi);
    if x(i,1)>pi/2
        q = x(i,1);
        x(i,1) = pi - q;
        x(i,1) = mod(x(i,1),pi);
    end

end

C = unique(x(:,2));
A = zeros(length(x),length(C));
A = A*nan;
count = 0;
for i = 1:length(x)
    for j = 1:length(C)
        if x(i,2) == C(j)
            if C(j) == 11411
                count = count+1;
            end
            A(i,j) = x(i,1);
        end
    end
end
A(A==0) = nan;


figure
hist(A(:,2:length(C)));
colormap jet
grid on
xlabel('angle');
title('ff');
legend(num2str(C(2:length(C))));



%Youssef:
%% 

load('data/evolve/faces'); %n*12*(central magnets, numberoftypes, face orientation, Energy)
f= reshape(faces, [12*250,10]);
%face energy:
%fe= f(:,:,)
figure
grid on
xlabel('Faceorientation');
ylabel('Energy')
title('Energy and orientation');
hist([f(:,6),f(:,9)])



%%

%vertices
load('data/evolve/vertices'); %nx30x(a,T)
v = reshape(vertices,[250,20,2]);%v_A = v(:,:,1:3);
%v_T = v(:,:,4:6);
v_E = v(:,:,1);

figure
histogram(v_E,20)



%% 
%doublevertices
d = load('data/doublevertices'); %shape:(nsimul)x(30)x(anglex5,typex5,E)
d_A = d(:,:,1:5);
d_T = d(:,:,6:10);
d_E = d(:,:,11);

%faces
f = load('data/faces'); %shape:(nsimul)x(12)x(anglex5,Vtypex5,O,E)
f_A= f(:,:,1:5);
f_T = f(:,:,6:10);
f_E = f(:,:,11);
f_O = f(:,:,12);

%%%%%%% PLOTS %%%%%%%

%%scatter frequency plots%%
%s: all
%m: A, ff_A, fw_A, ww_A


%%histograms%%
%m_T
%v_T
%d_T
%f_T & f_T for each f_O

%%Gaussians (Box plots, show mean and std)%%
%T vs E for m,v,d,f

%%dependencies / correlations%%
%s: A, Aabs vs E
%s: A, Aabs vs C
%s: C vs E
%f_O vs f_E & f_O vs s_E

%think of good way to visualise frequency of face types, eg
%12 faces, each with one of four configs. Easiest is freq: number of perf faces


% function y = modpi(x)
%      x = x(x ~= 0);
%     x = mod(x,pi);
%     for i = 1:length(x)
%     if x(i)>pi/2
%         q = x(i);
%         x(i) = pi - q;
%     end
%     end
%     x = mod(x,pi);
%     y = x;
% end
